"""create comments,post tables

Revision ID: e5f459a543d1
Revises: bacda5c6ecd8
Create Date: 2024-05-29 14:12:20.722362

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e5f459a543d1'
down_revision: Union[str, None] = 'bacda5c6ecd8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authors',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('avatar', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tag', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('posts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('data', sa.DateTime(), nullable=True),
    sa.Column('image', sa.String(length=100), nullable=True),
    sa.Column('text', sa.String(length=1000), nullable=True),
    sa.Column('id_author', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_author'], ['authors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_posts_data'), 'posts', ['data'], unique=False)
    op.create_table('tags_author',
    sa.Column('id_author', sa.Integer(), nullable=True),
    sa.Column('id_tag', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_author'], ['authors.id'], ),
    sa.ForeignKeyConstraint(['id_tag'], ['tags.id'], )
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('data', sa.DateTime(), nullable=True),
    sa.Column('author', sa.String(length=200), nullable=True),
    sa.Column('text', sa.String(length=400), nullable=True),
    sa.Column('id_post', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_post'], ['posts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comments_data'), 'comments', ['data'], unique=False)
    op.create_table('tags_post',
    sa.Column('id_post', sa.Integer(), nullable=True),
    sa.Column('id_tag', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_post'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['id_tag'], ['tags.id'], )
    )
    op.create_table('comments_post',
    sa.Column('id_post', sa.Integer(), nullable=True),
    sa.Column('id_comment', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_comment'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['id_post'], ['posts.id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('comments_post')
    op.drop_table('tags_post')
    op.drop_index(op.f('ix_comments_data'), table_name='comments')
    op.drop_table('comments')
    op.drop_table('tags_author')
    op.drop_index(op.f('ix_posts_data'), table_name='posts')
    op.drop_table('posts')
    op.drop_table('tags')
    op.drop_table('authors')
    # ### end Alembic commands ###
